[default]
runTarget("init_git")
runTarget("install_deps")
runTarget("build")
runTarget("unit_tests")
runTarget("make_package")
runTarget("deploy_package")
runTarget("deploy_docs")

[install_deps]
runShell("apt-get update")
runShell("apt-get -y install git cmake build-essential freeglut3-dev freeglut3 libxmu-dev libxi-dev doxygen rsync dpkg-dev")

[init_git]
runShell("git submodule update --init --recursive")

[build]
if not exists("./build"):
    makedirs("./build")
with cd("./build"):
    buildId = os.getenv("BUILD_ID")
    if buildId != None and buildId != "":
        runShell("cmake .. -DBUILD_ID=%s" % buildId)
    else:
        runShell("cmake ..")

    runShell("make -j 2")

[unit_tests]
with cd("./build/tests/"):
    runShell("./unit-tests/tests")

[make_package]
with cd("./build"):
    runShell("make package")

[deploy_package]
with cd("./build"):
    runShell(
    """
    bash -ec
    '
        currentTag=$(git tag -l --points-at HEAD)
        if [ -z ${currentTag} ]; then
            echo "No tag. I will not publish that commit!";
        else
            if [ -z ${OS} ]; then
                echo "Varibale OS not exist! I do not where to publish debs!"
            else
                echo "Tag: "${currentTag}
                IMAGE_NAME=(${OS//\//_})
                echo "Image name: "${IMAGE_NAME}
                REPO=./public/glRender/${IMAGE_NAME}
                echo "Path to repo: "${REPO}
                rsync -a --rsync-path="mkdir -p ${REPO} && rsync" glRender-*.deb jenkins@sogimu.fvds.ru:${REPO}
                ssh jenkins@sogimu.fvds.ru "cd ${REPO}; ls; dpkg-scanpackages -m . | gzip --fast > Packages.gz"
            fi
        fi
    '
    """)

[make_docs]
if not exists("./build"):
    runShell("scenarist.py run build")
with cd("./build/lib/"):
    runShell("doxygen Doxyfile") 

[deploy_docs]
with cd("./build/lib/"):
    runShell(
    """
    bash -ec
    '
        currentTag=$(git tag -l --points-at HEAD)
        if [ -z ${currentTag} ]; then
            echo "No tag. I will not publish that commit!";
        else
            echo "Tag: "${currentTag}
            HEAD_SHA=$(git rev-parse --short HEAD)
            DIR=./public/glRender/docs/${HEAD_SHA}/
            LATEST_DIR=./public/glRender/docs/latest/
            echo "Path to docs: "${REPO}
            rsync -r ./docs/html/* jenkins@sogimu.fvds.ru:${DIR}
            rsync -r ./docs/html/* jenkins@sogimu.fvds.ru:${LATEST_DIR}
        fi
    '
    """)